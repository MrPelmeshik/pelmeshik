.tree {
  height: 100%;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}

/* Собственная шапка виджета */
.widgetHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--space-8);
  padding-bottom: var(--space-4);
}

.widgetTitle {
  font-size: var(--font-18);
  font-weight: 500;
  color: var(--color-text);
  margin: 0;
}

.widgetContent {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  gap: var(--space-8);
  box-sizing: border-box;
}

.areaSection {
  position: relative;
  width: 100%;
  box-sizing: border-box;
}

.areaCard {
  position: relative;
  background: var(--glass-card-bg-transparent);
  border: var(--border-1) solid var(--glass-card-border-default);
  border-radius: var(--radius-2xs);
  padding: var(--space-4) var(--space-6);
  cursor: pointer;
  transition: all var(--transition-normal);
  backdrop-filter: var(--glass-backdrop-blur-8);
  -webkit-backdrop-filter: var(--glass-backdrop-blur-8);
  width: 100%;
  min-height: var(--tree-min-height);
  box-sizing: border-box;
  animation: fadeInUp var(--transition-slow) ease-out;
  box-shadow: var(--shadow-elev-1), var(--shadow-inset-0);
  overflow: hidden;
  display: flex;
  align-items: center;
}

.areaCard::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  background: var(--glass-radial-subtle);
}

.areaCard::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  box-shadow: 0 0 0 0 rgba(255,255,255,0);
  transition: box-shadow var(--transition-normal);
}

.areaCard:hover {
  background: var(--glass-card-bg-hover);
  border-color: var(--glass-card-border-default-hover);
  box-shadow: var(--shadow-elev-2), var(--shadow-inset-1);
  filter: saturate(1.04) brightness(1.03);
}

.areaCard:hover::after {
  box-shadow: 0 0 0 var(--border-2) rgba(255,255,255,0.10);
}

.areaCard.expanded {
  background: var(--glass-card-bg-selected);
  border-color: var(--glass-card-border-default-selected);
  box-shadow: 
    var(--shadow-elev-2),
    var(--shadow-inset-1),
    0 0 0 1px rgba(255,255,255,0.15);
  filter: saturate(1.1) brightness(1.05);
}

.areaCard.expanded::after {
  content: '';
  position: absolute;
  bottom: calc(-1 * var(--space-4));
  left: var(--tree-indent);
  width: var(--tree-connecting-line-width);
  height: var(--space-4);
  background: linear-gradient(
    to bottom,
    var(--glass-border-2),
    var(--glass-border-1)
  );
  border-radius: 0 0 var(--radius-2xs) var(--radius-2xs);
  z-index: 1;
}

/* Custom color support for area cards */
.areaCard[data-custom-color] {
  --custom-color: var(--card-custom-color);
  --custom-color-rgb: var(--card-custom-color-rgb);
  
  background: rgba(var(--custom-color-rgb), 0.02);
  border-color: rgba(var(--custom-color-rgb), 0.15);
}

.areaCard[data-custom-color]:hover {
  background: rgba(var(--custom-color-rgb), 0.05);
  border-color: rgba(var(--custom-color-rgb), 0.25);
}

.areaCard[data-custom-color].expanded {
  background: rgba(var(--custom-color-rgb), 0.08);
  border-color: rgba(var(--custom-color-rgb), 0.35);
  box-shadow: 
    var(--shadow-elev-2),
    var(--shadow-inset-1),
    0 0 0 1px rgba(var(--custom-color-rgb), 0.20);
}

/* Общие стили для контента карточек */
.areaContent,
.groupContent,
.taskContent {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  gap: var(--space-4);
  box-sizing: border-box;
}

.areaInfo,
.groupInfo,
.taskInfo {
  flex: 1;
  min-width: 0;
}

.areaTitleRow,
.groupTitleRow {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-6);
}

.areaTitle,
.groupTitle,
.taskTitle {
  font-size: var(--font-12);
  font-weight: 500;
  color: var(--color-text);
  line-height: 1.2;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

.areaTitle {
  flex: 1;
  min-width: 0;
}

.groupsSection {
  position: relative;
  margin-top: var(--space-4);
  margin-left: var(--tree-indent);
  width: calc(66.666% - var(--tree-indent));
  max-width: calc(100% - 32px);
  box-sizing: border-box;
  animation: slideDown var(--transition-normal) ease-out;
}

.groupsSection::before {
  content: '';
  position: absolute;
  left: calc(-1 * var(--tree-indent));
  top: 0;
  width: var(--tree-connecting-line-width);
  height: 100%;
  background: linear-gradient(
    to bottom,
    var(--glass-border-2),
    var(--glass-border-1)
  );
  border-radius: var(--radius-2xs);
  z-index: 1;
}

.groupItem {
  position: relative;
  margin-bottom: var(--space-4);
  display: flex;
  align-items: center;
  min-height: var(--size-44);
  width: 100%;
  box-sizing: border-box;
}

.groupItem::before {
  content: '';
  position: absolute;
  left: calc(-1 * var(--tree-indent));
  top: 50%;
  width: var(--tree-connecting-line-height);
  height: var(--tree-connecting-line-width);
  background: linear-gradient(
    to right,
    var(--glass-border-2),
    var(--glass-border-1)
  );
  border-radius: var(--radius-2xs);
  transform: translateY(-50%);
  z-index: 2;
}

.groupCard {
  position: relative;
  background: var(--glass-card-bg-transparent);
  border: var(--border-1) solid var(--glass-card-border-default);
  border-radius: var(--radius-2xs);
  padding: var(--space-4) var(--space-6);
  flex: 1;
  transition: all var(--transition-fast);
  backdrop-filter: var(--glass-backdrop-blur-8);
  -webkit-backdrop-filter: var(--glass-backdrop-blur-8);
  min-height: var(--tree-min-height);
  display: flex;
  align-items: center;
  box-sizing: border-box;
  max-width: 100%;
  overflow: hidden;
  box-shadow: var(--shadow-elev-1), var(--shadow-inset-0);
}

.groupCard::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  background: var(--glass-radial-subtle);
}

.groupCard::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  box-shadow: 0 0 0 0 rgba(255,255,255,0);
  transition: box-shadow var(--transition-fast);
}

.groupCard:hover {
  background: var(--glass-card-bg-hover);
  border-color: var(--glass-card-border-default-hover);
  box-shadow: var(--shadow-elev-2), var(--shadow-inset-1);
  filter: saturate(1.04) brightness(1.03);
}

.groupCard:hover::after {
  box-shadow: 0 0 0 var(--border-2) rgba(255,255,255,0.10);
}

/* Custom color support for group cards */
.groupCard[data-custom-color] {
  --custom-color: var(--card-custom-color);
  --custom-color-rgb: var(--card-custom-color-rgb);
  
  background: rgba(var(--custom-color-rgb), 0.02);
  border-color: rgba(var(--custom-color-rgb), 0.15);
}

.groupCard[data-custom-color]:hover {
  background: rgba(var(--custom-color-rgb), 0.05);
  border-color: rgba(var(--custom-color-rgb), 0.25);
}

/* Стили для задач */
.groupCard.expanded {
  background: var(--glass-card-bg-selected);
  border-color: var(--glass-card-border-default-selected);
  box-shadow: 
    var(--shadow-elev-2),
    var(--shadow-inset-1),
    0 0 0 1px rgba(255,255,255,0.15);
  filter: saturate(1.1) brightness(1.05);
}

.groupCard.expanded::after {
  content: '';
  position: absolute;
  bottom: calc(-1 * var(--space-4));
  left: var(--tree-indent);
  width: var(--tree-connecting-line-width);
  height: var(--space-4);
  background: linear-gradient(
    to bottom,
    var(--glass-border-2),
    var(--glass-border-1)
  );
  border-radius: 0 0 var(--radius-2xs) var(--radius-2xs);
  z-index: 1;
}

.tasksSection {
  position: relative;
  margin-top: var(--space-4);
  margin-left: var(--tree-indent);
  width: calc(50% - var(--tree-indent));
  max-width: calc(100% - 32px);
  box-sizing: border-box;
  animation: slideDown var(--transition-normal) ease-out;
}

.tasksSection::before {
  content: '';
  position: absolute;
  left: calc(-1 * var(--tree-indent));
  top: 0;
  width: var(--tree-connecting-line-width);
  height: 100%;
  background: linear-gradient(
    to bottom,
    var(--glass-border-2),
    var(--glass-border-1)
  );
  border-radius: var(--radius-2xs);
  z-index: 1;
}

.taskItem {
  position: relative;
  margin-bottom: var(--space-4);
  display: flex;
  align-items: center;
  min-height: var(--size-44);
  width: 100%;
  box-sizing: border-box;
}

.taskItem::before {
  content: '';
  position: absolute;
  left: calc(-1 * var(--tree-indent));
  top: 50%;
  width: var(--tree-connecting-line-height);
  height: var(--tree-connecting-line-width);
  background: linear-gradient(
    to right,
    var(--glass-border-2),
    var(--glass-border-1)
  );
  border-radius: var(--radius-2xs);
  transform: translateY(-50%);
  z-index: 2;
}

.taskCard {
  position: relative;
  background: var(--glass-card-bg-transparent);
  border: var(--border-1) solid var(--glass-card-border-default);
  border-radius: var(--radius-2xs);
  padding: var(--space-4) var(--space-6);
  flex: 1;
  transition: all var(--transition-fast);
  backdrop-filter: var(--glass-backdrop-blur-8);
  -webkit-backdrop-filter: var(--glass-backdrop-blur-8);
  min-height: var(--tree-min-height);
  display: flex;
  align-items: center;
  box-sizing: border-box;
  max-width: 100%;
  overflow: hidden;
  box-shadow: var(--shadow-elev-1), var(--shadow-inset-0);
}

.taskCard::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  background: var(--glass-radial-subtle);
}

.taskCard::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  box-shadow: 0 0 0 0 rgba(255,255,255,0);
  transition: box-shadow var(--transition-fast);
}

.taskCard:hover {
  background: var(--glass-card-bg-hover);
  border-color: var(--glass-card-border-default-hover);
  box-shadow: var(--shadow-elev-2), var(--shadow-inset-1);
  filter: saturate(1.04) brightness(1.03);
}

.taskCard:hover::after {
  box-shadow: 0 0 0 var(--border-2) rgba(255,255,255,0.10);
}

/* Custom color support for task cards */
.taskCard[data-custom-color] {
  --custom-color: var(--card-custom-color);
  --custom-color-rgb: var(--card-custom-color-rgb);
  
  background: rgba(var(--custom-color-rgb), 0.02);
  border-color: rgba(var(--custom-color-rgb), 0.15);
}

.taskCard[data-custom-color]:hover {
  background: rgba(var(--custom-color-rgb), 0.05);
  border-color: rgba(var(--custom-color-rgb), 0.25);
}

/* Общие стили для кнопок действий */
.areaActions,
.groupActions,
.taskActions {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-4);
  opacity: 0;
  transition: opacity var(--transition-fast);
  flex-shrink: 0;
}

.areaCard:hover .areaActions,
.groupCard:hover .groupActions,
.taskCard:hover .taskActions {
  opacity: 1;
}

/* Анимации */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Стили для скроллбара */
.widgetContent::-webkit-scrollbar {
  width: 6px;
}

.widgetContent::-webkit-scrollbar-track {
  background: var(--glass-scrollbar-track);
  border-radius: var(--space-3);
}

.widgetContent::-webkit-scrollbar-thumb {
  background: var(--glass-scrollbar-thumb);
  border-radius: var(--space-3);
}

.widgetContent::-webkit-scrollbar-thumb:hover {
  background: var(--glass-scrollbar-thumb-hover);
}